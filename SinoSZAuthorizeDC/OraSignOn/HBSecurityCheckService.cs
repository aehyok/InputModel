//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2300
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 1.1.4322.2300 版自动生成。
// 
namespace HBSecurityCheckService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppSecurityCheckServiceSoap", Namespace="http://tempuri.org/")]
    public class AppSecurityCheckService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public AppSecurityCheckService() {
            this.Url = "http://10.73.2.207/AppAdmin/Exports/AppSecurityCheckService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplications() {
            object[] results = this.Invoke("GetApplications", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplications(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplications", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetApplications(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRoles(string appCodeName, RightMaskType rightMask) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        appCodeName,
                        rightMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRoles(string appCodeName, RightMaskType rightMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRoles", new object[] {
                        appCodeName,
                        rightMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctions(string appCodeName, RightMaskType rightMask) {
            object[] results = this.Invoke("GetFunctions", new object[] {
                        appCodeName,
                        rightMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctions(string appCodeName, RightMaskType rightMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctions", new object[] {
                        appCodeName,
                        rightMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFunctions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRolesUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRolesUsers(string orgRoot, string appCodeName, string roleCodeNames, DelegationMaskType delegationMask, SidelineMaskType sidelineMask, string extAttr) {
            object[] results = this.Invoke("GetRolesUsers", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        delegationMask,
                        sidelineMask,
                        extAttr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRolesUsers(string orgRoot, string appCodeName, string roleCodeNames, DelegationMaskType delegationMask, SidelineMaskType sidelineMask, string extAttr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRolesUsers", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        delegationMask,
                        sidelineMask,
                        extAttr}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRolesUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentAndUserInRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentAndUserInRoles(string orgRoot, string appCodeName, string roleCodeNames, bool doesMixSort, bool doesSortRank, bool includeDelegate) {
            object[] results = this.Invoke("GetDepartmentAndUserInRoles", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        doesMixSort,
                        doesSortRank,
                        includeDelegate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDepartmentAndUserInRoles(string orgRoot, string appCodeName, string roleCodeNames, bool doesMixSort, bool doesSortRank, bool includeDelegate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDepartmentAndUserInRoles", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        doesMixSort,
                        doesSortRank,
                        includeDelegate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDepartmentAndUserInRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChildrenInRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenInRoles(string orgRoot, string appCodeName, string roleCodeNames, bool doesMixSort, bool doesSortRank, bool includeDelegate) {
            object[] results = this.Invoke("GetChildrenInRoles", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        doesMixSort,
                        doesSortRank,
                        includeDelegate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChildrenInRoles(string orgRoot, string appCodeName, string roleCodeNames, bool doesMixSort, bool doesSortRank, bool includeDelegate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChildrenInRoles", new object[] {
                        orgRoot,
                        appCodeName,
                        roleCodeNames,
                        doesMixSort,
                        doesSortRank,
                        includeDelegate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetChildrenInRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionsRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctionsRoles(string appCodeName, string funcCodeNames) {
            object[] results = this.Invoke("GetFunctionsRoles", new object[] {
                        appCodeName,
                        funcCodeNames});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctionsRoles(string appCodeName, string funcCodeNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctionsRoles", new object[] {
                        appCodeName,
                        funcCodeNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFunctionsRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionsUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctionsUsers(string orgRoot, string appCodeName, string funcCodeNames, DelegationMaskType delegationMask, SidelineMaskType sidelineMask, string extAttr) {
            object[] results = this.Invoke("GetFunctionsUsers", new object[] {
                        orgRoot,
                        appCodeName,
                        funcCodeNames,
                        delegationMask,
                        sidelineMask,
                        extAttr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctionsUsers(string orgRoot, string appCodeName, string funcCodeNames, DelegationMaskType delegationMask, SidelineMaskType sidelineMask, string extAttr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctionsUsers", new object[] {
                        orgRoot,
                        appCodeName,
                        funcCodeNames,
                        delegationMask,
                        sidelineMask,
                        extAttr}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFunctionsUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserInRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInRoles(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("IsUserInRoles", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsUserInRoles(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsUserInRoles", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsUserInRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserInAllRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInAllRoles(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("IsUserInAllRoles", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsUserInAllRoles(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsUserInAllRoles", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsUserInAllRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoesUserHasPermissions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesUserHasPermissions(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("DoesUserHasPermissions", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoesUserHasPermissions(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoesUserHasPermissions", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDoesUserHasPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoesUserHasAllPermissions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesUserHasAllPermissions(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("DoesUserHasAllPermissions", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoesUserHasAllPermissions(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoesUserHasAllPermissions", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDoesUserHasAllPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignInCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SignInCheck(string strLogonName, string strUserPwd) {
            object[] results = this.Invoke("SignInCheck", new object[] {
                        strLogonName,
                        strUserPwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignInCheck(string strLogonName, string strUserPwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignInCheck", new object[] {
                        strLogonName,
                        strUserPwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSignInCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserRoles(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("GetUserRoles", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask,
                        delegationMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserRoles(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserRoles", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserPermissions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserPermissions(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("GetUserPermissions", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask,
                        delegationMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPermissions(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPermissions", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserApplicationsRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserApplicationsRoles(string userValue, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("GetUserApplicationsRoles", new object[] {
                        userValue,
                        userValueType,
                        rightMask,
                        delegationMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserApplicationsRoles(string userValue, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserApplicationsRoles", new object[] {
                        userValue,
                        userValueType,
                        rightMask,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserApplicationsRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserApplications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserApplications(string userValue, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask) {
            object[] results = this.Invoke("GetUserApplications", new object[] {
                        userValue,
                        userValueType,
                        rightMask,
                        delegationMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserApplications(string userValue, UserValueType userValueType, RightMaskType rightMask, DelegationMaskType delegationMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserApplications", new object[] {
                        userValue,
                        userValueType,
                        rightMask,
                        delegationMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserApplications(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRolesScopes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserRolesScopes(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, ScopeMaskType scopeMask) {
            object[] results = this.Invoke("GetUserRolesScopes", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask,
                        scopeMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserRolesScopes(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, ScopeMaskType scopeMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserRolesScopes", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        delegationMask,
                        scopeMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserRolesScopes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserFunctionsScopes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserFunctionsScopes(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, ScopeMaskType scopeMask) {
            object[] results = this.Invoke("GetUserFunctionsScopes", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask,
                        scopeMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserFunctionsScopes(string userValue, string appCodeName, string funcCodeNames, UserValueType userValueType, DelegationMaskType delegationMask, ScopeMaskType scopeMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserFunctionsScopes", new object[] {
                        userValue,
                        appCodeName,
                        funcCodeNames,
                        userValueType,
                        delegationMask,
                        scopeMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserFunctionsScopes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOriginalUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOriginalUser(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, bool includeDisabled) {
            object[] results = this.Invoke("GetOriginalUser", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        includeDisabled});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOriginalUser(string userValue, string appCodeName, string roleCodeNames, UserValueType userValueType, bool includeDisabled, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOriginalUser", new object[] {
                        userValue,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        includeDisabled}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOriginalUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOriginalUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllOriginalUser(string userValue, UserValueType userValueType, bool includeDisabled) {
            object[] results = this.Invoke("GetAllOriginalUser", new object[] {
                        userValue,
                        userValueType,
                        includeDisabled});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllOriginalUser(string userValue, UserValueType userValueType, bool includeDisabled, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllOriginalUser", new object[] {
                        userValue,
                        userValueType,
                        includeDisabled}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllOriginalUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelegatedUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDelegatedUser(string userValues, string appCodeName, string roleCodeNames, UserValueType userValueType, bool includeDisabled) {
            object[] results = this.Invoke("GetDelegatedUser", new object[] {
                        userValues,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        includeDisabled});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDelegatedUser(string userValues, string appCodeName, string roleCodeNames, UserValueType userValueType, bool includeDisabled, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDelegatedUser", new object[] {
                        userValues,
                        appCodeName,
                        roleCodeNames,
                        userValueType,
                        includeDisabled}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDelegatedUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDelegatedUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllDelegatedUser(string userValues, UserValueType userValueType, bool includeDisabled) {
            object[] results = this.Invoke("GetAllDelegatedUser", new object[] {
                        userValues,
                        userValueType,
                        includeDisabled});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllDelegatedUser(string userValues, UserValueType userValueType, bool includeDisabled, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllDelegatedUser", new object[] {
                        userValues,
                        userValueType,
                        includeDisabled}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllDelegatedUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAllowDelegteRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserAllowDelegteRoles(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask) {
            object[] results = this.Invoke("GetUserAllowDelegteRoles", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAllowDelegteRoles(string userValue, string appCodeName, UserValueType userValueType, RightMaskType rightMask, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAllowDelegteRoles", new object[] {
                        userValue,
                        appCodeName,
                        userValueType,
                        rightMask}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetUserAllowDelegteRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.FlagsAttribute()]
    public enum RightMaskType {
        
        /// <remarks/>
        Self = 1,
        
        /// <remarks/>
        App = 2,
        
        /// <remarks/>
        All = 4,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.FlagsAttribute()]
    public enum DelegationMaskType {
        
        /// <remarks/>
        Original = 1,
        
        /// <remarks/>
        Delegated = 2,
        
        /// <remarks/>
        All = 4,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.FlagsAttribute()]
    public enum SidelineMaskType {
        
        /// <remarks/>
        NotSideline = 1,
        
        /// <remarks/>
        Sideline = 2,
        
        /// <remarks/>
        All = 4,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum UserValueType {
        
        /// <remarks/>
        LogonName,
        
        /// <remarks/>
        AllPath,
        
        /// <remarks/>
        PersonID,
        
        /// <remarks/>
        ICCode,
        
        /// <remarks/>
        Guid,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.FlagsAttribute()]
    public enum ScopeMaskType {
        
        /// <remarks/>
        OrgScope = 1,
        
        /// <remarks/>
        DataScope = 2,
        
        /// <remarks/>
        All = 4,
    }
}
